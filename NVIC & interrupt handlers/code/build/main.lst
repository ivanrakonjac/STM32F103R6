ARM GAS  C:\Users\Ika\AppData\Local\Temp\ccGPpoZt.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"main.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.SystemClock_Config,"ax",%progbits
  16              		.align	1
  17              		.global	SystemClock_Config
  18              		.arch armv7-m
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu softvfp
  24              	SystemClock_Config:
  25              	.LFB66:
  26              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * <h2><center>&copy; Copyright (c) 2020 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.</center></h2>
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Core/Src/main.c ****   * the "License"; You may not use this file except in compliance with the
  14:Core/Src/main.c ****   * License. You may obtain a copy of the License at:
  15:Core/Src/main.c ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Core/Src/main.c ****   *
  17:Core/Src/main.c ****   ******************************************************************************
  18:Core/Src/main.c ****   */
  19:Core/Src/main.c **** /* USER CODE END Header */
  20:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  21:Core/Src/main.c **** #include "main.h"
  22:Core/Src/main.c **** 
  23:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  24:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  25:Core/Src/main.c **** 
  26:Core/Src/main.c **** /* USER CODE END Includes */
  27:Core/Src/main.c **** 
  28:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  29:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  30:Core/Src/main.c **** 
  31:Core/Src/main.c **** /* USER CODE END PTD */
  32:Core/Src/main.c **** 
ARM GAS  C:\Users\Ika\AppData\Local\Temp\ccGPpoZt.s 			page 2


  33:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  34:Core/Src/main.c **** /* USER CODE BEGIN PD */
  35:Core/Src/main.c **** /* USER CODE END PD */
  36:Core/Src/main.c **** 
  37:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  38:Core/Src/main.c **** /* USER CODE BEGIN PM */
  39:Core/Src/main.c **** 
  40:Core/Src/main.c **** /* USER CODE END PM */
  41:Core/Src/main.c **** 
  42:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  43:Core/Src/main.c **** 
  44:Core/Src/main.c **** /* USER CODE BEGIN PV */
  45:Core/Src/main.c **** 
  46:Core/Src/main.c **** /* USER CODE END PV */
  47:Core/Src/main.c **** 
  48:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  49:Core/Src/main.c **** void SystemClock_Config(void);
  50:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  51:Core/Src/main.c **** 
  52:Core/Src/main.c **** /* USER CODE END PFP */
  53:Core/Src/main.c **** 
  54:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  55:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  56:Core/Src/main.c **** 
  57:Core/Src/main.c **** /* USER CODE END 0 */
  58:Core/Src/main.c **** 
  59:Core/Src/main.c **** /**
  60:Core/Src/main.c ****   * @brief  The application entry point.
  61:Core/Src/main.c ****   * @retval int
  62:Core/Src/main.c ****   */
  63:Core/Src/main.c **** int main(void)
  64:Core/Src/main.c **** {
  65:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
  66:Core/Src/main.c **** 
  67:Core/Src/main.c ****   /* USER CODE END 1 */
  68:Core/Src/main.c **** 
  69:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
  70:Core/Src/main.c **** 
  71:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  72:Core/Src/main.c ****   HAL_Init();
  73:Core/Src/main.c **** 
  74:Core/Src/main.c ****   /* USER CODE BEGIN Init */
  75:Core/Src/main.c **** 
  76:Core/Src/main.c ****   /* USER CODE END Init */
  77:Core/Src/main.c **** 
  78:Core/Src/main.c ****   /* Configure the system clock */
  79:Core/Src/main.c ****   SystemClock_Config();
  80:Core/Src/main.c **** 
  81:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
  82:Core/Src/main.c **** 
  83:Core/Src/main.c ****   /* USER CODE END SysInit */
  84:Core/Src/main.c **** 
  85:Core/Src/main.c ****   /* Initialize all configured peripherals */
  86:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
  87:Core/Src/main.c **** 
  88:Core/Src/main.c ****   /* USER CODE END 2 */
  89:Core/Src/main.c **** 
ARM GAS  C:\Users\Ika\AppData\Local\Temp\ccGPpoZt.s 			page 3


  90:Core/Src/main.c ****   /* Infinite loop */
  91:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
  92:Core/Src/main.c ****   while (1)
  93:Core/Src/main.c ****   {
  94:Core/Src/main.c ****     /* USER CODE END WHILE */
  95:Core/Src/main.c **** 
  96:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
  97:Core/Src/main.c ****   }
  98:Core/Src/main.c ****   /* USER CODE END 3 */
  99:Core/Src/main.c **** }
 100:Core/Src/main.c **** 
 101:Core/Src/main.c **** /**
 102:Core/Src/main.c ****   * @brief System Clock Configuration
 103:Core/Src/main.c ****   * @retval None
 104:Core/Src/main.c ****   */
 105:Core/Src/main.c **** void SystemClock_Config(void)
 106:Core/Src/main.c **** {
  27              		.loc 1 106 1 view -0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 64
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31 0000 10B5     		push	{r4, lr}
  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 4, -8
  35              		.cfi_offset 14, -4
  36 0002 90B0     		sub	sp, sp, #64
  37              	.LCFI1:
  38              		.cfi_def_cfa_offset 72
 107:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
  39              		.loc 1 107 3 view .LVU1
  40              		.loc 1 107 22 is_stmt 0 view .LVU2
  41 0004 2422     		movs	r2, #36
  42 0006 0021     		movs	r1, #0
  43 0008 07A8     		add	r0, sp, #28
  44 000a FFF7FEFF 		bl	memset
  45              	.LVL0:
 108:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
  46              		.loc 1 108 3 is_stmt 1 view .LVU3
  47              		.loc 1 108 22 is_stmt 0 view .LVU4
  48 000e 0024     		movs	r4, #0
  49 0010 0194     		str	r4, [sp, #4]
  50 0012 0294     		str	r4, [sp, #8]
  51 0014 0394     		str	r4, [sp, #12]
  52 0016 0494     		str	r4, [sp, #16]
  53 0018 0594     		str	r4, [sp, #20]
 109:Core/Src/main.c **** 
 110:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 111:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 112:Core/Src/main.c ****   */
 113:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
  54              		.loc 1 113 3 is_stmt 1 view .LVU5
  55              		.loc 1 113 36 is_stmt 0 view .LVU6
  56 001a 0223     		movs	r3, #2
  57 001c 0693     		str	r3, [sp, #24]
 114:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
  58              		.loc 1 114 3 is_stmt 1 view .LVU7
ARM GAS  C:\Users\Ika\AppData\Local\Temp\ccGPpoZt.s 			page 4


  59              		.loc 1 114 30 is_stmt 0 view .LVU8
  60 001e 0123     		movs	r3, #1
  61 0020 0A93     		str	r3, [sp, #40]
 115:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
  62              		.loc 1 115 3 is_stmt 1 view .LVU9
  63              		.loc 1 115 41 is_stmt 0 view .LVU10
  64 0022 1023     		movs	r3, #16
  65 0024 0B93     		str	r3, [sp, #44]
 116:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
  66              		.loc 1 116 3 is_stmt 1 view .LVU11
 117:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
  67              		.loc 1 117 3 view .LVU12
  68              		.loc 1 117 7 is_stmt 0 view .LVU13
  69 0026 06A8     		add	r0, sp, #24
  70 0028 FFF7FEFF 		bl	HAL_RCC_OscConfig
  71              	.LVL1:
 118:Core/Src/main.c ****   {
 119:Core/Src/main.c ****     Error_Handler();
 120:Core/Src/main.c ****   }
 121:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 122:Core/Src/main.c ****   */
 123:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
  72              		.loc 1 123 3 is_stmt 1 view .LVU14
  73              		.loc 1 123 31 is_stmt 0 view .LVU15
  74 002c 0F23     		movs	r3, #15
  75 002e 0193     		str	r3, [sp, #4]
 124:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 125:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI;
  76              		.loc 1 125 3 is_stmt 1 view .LVU16
  77              		.loc 1 125 34 is_stmt 0 view .LVU17
  78 0030 0294     		str	r4, [sp, #8]
 126:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
  79              		.loc 1 126 3 is_stmt 1 view .LVU18
  80              		.loc 1 126 35 is_stmt 0 view .LVU19
  81 0032 0394     		str	r4, [sp, #12]
 127:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
  82              		.loc 1 127 3 is_stmt 1 view .LVU20
  83              		.loc 1 127 36 is_stmt 0 view .LVU21
  84 0034 0494     		str	r4, [sp, #16]
 128:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
  85              		.loc 1 128 3 is_stmt 1 view .LVU22
  86              		.loc 1 128 36 is_stmt 0 view .LVU23
  87 0036 0594     		str	r4, [sp, #20]
 129:Core/Src/main.c **** 
 130:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
  88              		.loc 1 130 3 is_stmt 1 view .LVU24
  89              		.loc 1 130 7 is_stmt 0 view .LVU25
  90 0038 2146     		mov	r1, r4
  91 003a 01A8     		add	r0, sp, #4
  92 003c FFF7FEFF 		bl	HAL_RCC_ClockConfig
  93              	.LVL2:
 131:Core/Src/main.c ****   {
 132:Core/Src/main.c ****     Error_Handler();
 133:Core/Src/main.c ****   }
 134:Core/Src/main.c **** }
  94              		.loc 1 134 1 view .LVU26
  95 0040 10B0     		add	sp, sp, #64
ARM GAS  C:\Users\Ika\AppData\Local\Temp\ccGPpoZt.s 			page 5


  96              	.LCFI2:
  97              		.cfi_def_cfa_offset 8
  98              		@ sp needed
  99 0042 10BD     		pop	{r4, pc}
 100              		.cfi_endproc
 101              	.LFE66:
 103              		.section	.text.main,"ax",%progbits
 104              		.align	1
 105              		.global	main
 106              		.syntax unified
 107              		.thumb
 108              		.thumb_func
 109              		.fpu softvfp
 111              	main:
 112              	.LFB65:
  64:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 113              		.loc 1 64 1 is_stmt 1 view -0
 114              		.cfi_startproc
 115              		@ Volatile: function does not return.
 116              		@ args = 0, pretend = 0, frame = 0
 117              		@ frame_needed = 0, uses_anonymous_args = 0
 118 0000 08B5     		push	{r3, lr}
 119              	.LCFI3:
 120              		.cfi_def_cfa_offset 8
 121              		.cfi_offset 3, -8
 122              		.cfi_offset 14, -4
  72:Core/Src/main.c **** 
 123              		.loc 1 72 3 view .LVU28
 124 0002 FFF7FEFF 		bl	HAL_Init
 125              	.LVL3:
  79:Core/Src/main.c **** 
 126              		.loc 1 79 3 view .LVU29
 127 0006 FFF7FEFF 		bl	SystemClock_Config
 128              	.LVL4:
 129              	.L4:
  92:Core/Src/main.c ****   {
 130              		.loc 1 92 3 discriminator 1 view .LVU30
  97:Core/Src/main.c ****   /* USER CODE END 3 */
 131              		.loc 1 97 3 discriminator 1 view .LVU31
  92:Core/Src/main.c ****   {
 132              		.loc 1 92 9 discriminator 1 view .LVU32
 133 000a FEE7     		b	.L4
 134              		.cfi_endproc
 135              	.LFE65:
 137              		.section	.text.HAL_TIM_PeriodElapsedCallback,"ax",%progbits
 138              		.align	1
 139              		.global	HAL_TIM_PeriodElapsedCallback
 140              		.syntax unified
 141              		.thumb
 142              		.thumb_func
 143              		.fpu softvfp
 145              	HAL_TIM_PeriodElapsedCallback:
 146              	.LVL5:
 147              	.LFB67:
 135:Core/Src/main.c **** 
 136:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 137:Core/Src/main.c **** 
ARM GAS  C:\Users\Ika\AppData\Local\Temp\ccGPpoZt.s 			page 6


 138:Core/Src/main.c **** /* USER CODE END 4 */
 139:Core/Src/main.c **** 
 140:Core/Src/main.c **** /**
 141:Core/Src/main.c ****   * @brief  Period elapsed callback in non blocking mode
 142:Core/Src/main.c ****   * @note   This function is called  when TIM1 interrupt took place, inside
 143:Core/Src/main.c ****   * HAL_TIM_IRQHandler(). It makes a direct call to HAL_IncTick() to increment
 144:Core/Src/main.c ****   * a global variable "uwTick" used as application time base.
 145:Core/Src/main.c ****   * @param  htim : TIM handle
 146:Core/Src/main.c ****   * @retval None
 147:Core/Src/main.c ****   */
 148:Core/Src/main.c **** void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
 149:Core/Src/main.c **** {
 148              		.loc 1 149 1 view -0
 149              		.cfi_startproc
 150              		@ args = 0, pretend = 0, frame = 0
 151              		@ frame_needed = 0, uses_anonymous_args = 0
 152              		.loc 1 149 1 is_stmt 0 view .LVU34
 153 0000 08B5     		push	{r3, lr}
 154              	.LCFI4:
 155              		.cfi_def_cfa_offset 8
 156              		.cfi_offset 3, -8
 157              		.cfi_offset 14, -4
 150:Core/Src/main.c ****   /* USER CODE BEGIN Callback 0 */
 151:Core/Src/main.c **** 
 152:Core/Src/main.c ****   /* USER CODE END Callback 0 */
 153:Core/Src/main.c ****   if (htim->Instance == TIM1) {
 158              		.loc 1 153 3 is_stmt 1 view .LVU35
 159              		.loc 1 153 11 is_stmt 0 view .LVU36
 160 0002 0268     		ldr	r2, [r0]
 161              		.loc 1 153 6 view .LVU37
 162 0004 034B     		ldr	r3, .L10
 163 0006 9A42     		cmp	r2, r3
 164 0008 00D0     		beq	.L9
 165              	.LVL6:
 166              	.L6:
 154:Core/Src/main.c ****     HAL_IncTick();
 155:Core/Src/main.c ****   }
 156:Core/Src/main.c ****   /* USER CODE BEGIN Callback 1 */
 157:Core/Src/main.c **** 
 158:Core/Src/main.c ****   /* USER CODE END Callback 1 */
 159:Core/Src/main.c **** }
 167              		.loc 1 159 1 view .LVU38
 168 000a 08BD     		pop	{r3, pc}
 169              	.LVL7:
 170              	.L9:
 154:Core/Src/main.c ****     HAL_IncTick();
 171              		.loc 1 154 5 is_stmt 1 view .LVU39
 172 000c FFF7FEFF 		bl	HAL_IncTick
 173              	.LVL8:
 174              		.loc 1 159 1 is_stmt 0 view .LVU40
 175 0010 FBE7     		b	.L6
 176              	.L11:
 177 0012 00BF     		.align	2
 178              	.L10:
 179 0014 002C0140 		.word	1073818624
 180              		.cfi_endproc
 181              	.LFE67:
ARM GAS  C:\Users\Ika\AppData\Local\Temp\ccGPpoZt.s 			page 7


 183              		.section	.text.Error_Handler,"ax",%progbits
 184              		.align	1
 185              		.global	Error_Handler
 186              		.syntax unified
 187              		.thumb
 188              		.thumb_func
 189              		.fpu softvfp
 191              	Error_Handler:
 192              	.LFB68:
 160:Core/Src/main.c **** 
 161:Core/Src/main.c **** /**
 162:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 163:Core/Src/main.c ****   * @retval None
 164:Core/Src/main.c ****   */
 165:Core/Src/main.c **** void Error_Handler(void)
 166:Core/Src/main.c **** {
 193              		.loc 1 166 1 is_stmt 1 view -0
 194              		.cfi_startproc
 195              		@ args = 0, pretend = 0, frame = 0
 196              		@ frame_needed = 0, uses_anonymous_args = 0
 197              		@ link register save eliminated.
 167:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 168:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 169:Core/Src/main.c **** 
 170:Core/Src/main.c ****   /* USER CODE END Error_Handler_Debug */
 171:Core/Src/main.c **** }
 198              		.loc 1 171 1 view .LVU42
 199 0000 7047     		bx	lr
 200              		.cfi_endproc
 201              	.LFE68:
 203              		.text
 204              	.Letext0:
 205              		.file 2 "c:\\users\\ika\\desktop\\gnu mcu\\arm-none-eabi-gcc-9.3.1-1.1\\arm-none-eabi\\include\\ma
 206              		.file 3 "c:\\users\\ika\\desktop\\gnu mcu\\arm-none-eabi-gcc-9.3.1-1.1\\arm-none-eabi\\include\\sy
 207              		.file 4 "Drivers/CMSIS/Include/core_cm3.h"
 208              		.file 5 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/system_stm32f1xx.h"
 209              		.file 6 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103x6.h"
 210              		.file 7 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 211              		.file 8 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc.h"
 212              		.file 9 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc_ex.h"
 213              		.file 10 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 214              		.file 11 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_tim.h"
 215              		.file 12 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
 216              		.file 13 "<built-in>"
ARM GAS  C:\Users\Ika\AppData\Local\Temp\ccGPpoZt.s 			page 8


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
C:\Users\Ika\AppData\Local\Temp\ccGPpoZt.s:16     .text.SystemClock_Config:0000000000000000 $t
C:\Users\Ika\AppData\Local\Temp\ccGPpoZt.s:24     .text.SystemClock_Config:0000000000000000 SystemClock_Config
C:\Users\Ika\AppData\Local\Temp\ccGPpoZt.s:104    .text.main:0000000000000000 $t
C:\Users\Ika\AppData\Local\Temp\ccGPpoZt.s:111    .text.main:0000000000000000 main
C:\Users\Ika\AppData\Local\Temp\ccGPpoZt.s:138    .text.HAL_TIM_PeriodElapsedCallback:0000000000000000 $t
C:\Users\Ika\AppData\Local\Temp\ccGPpoZt.s:145    .text.HAL_TIM_PeriodElapsedCallback:0000000000000000 HAL_TIM_PeriodElapsedCallback
C:\Users\Ika\AppData\Local\Temp\ccGPpoZt.s:179    .text.HAL_TIM_PeriodElapsedCallback:0000000000000014 $d
C:\Users\Ika\AppData\Local\Temp\ccGPpoZt.s:184    .text.Error_Handler:0000000000000000 $t
C:\Users\Ika\AppData\Local\Temp\ccGPpoZt.s:191    .text.Error_Handler:0000000000000000 Error_Handler

UNDEFINED SYMBOLS
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
HAL_IncTick
